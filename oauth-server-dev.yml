server:
  port: 8084
spring:
  application:
    name: oauth-server
  datasource:
    url: jdbc:mysql://localhost:3306/oauth_db?serverTimezone=UTC&useUnicode=true&charaterEncoding=utf-8&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver

  jpa:
    show-sql: true

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

eureka:
  instance:
  
    ip-address: 111.111.111.111
    # 是否显示IP地址，默认false
    prefer-ip-address: true
    hostname: localhost
    # 自定义实例ID，在eureka中注册的唯一id
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}

    ################################################## 服务端接受客户端心跳频率5秒，超过十秒移除
    # 表示eureka client发送心跳给server端的频率，默认30秒
    lease-renewal-interval-in-seconds: 5
    # 可以解决Eureka注册服务慢的问题，注意：在生产中，最好坚持使用默认值，因为在服务器内部有一些计算，他们对续约做出假设。

    # 心跳发发送频率，指定续约更新频率。如果在eureka在eureka.instance.lease-renewal-interval-in-seconds后没有收到心跳，将摘除改实例。
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance，默认90秒
    lease-expiration-duration-in-seconds: 10
    # 如果该值设置太大，则很可能将流量转发过去的时候，该instance已经不存活。
    # 如果该值设置太小，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于leaseRenewalIntervalInSeconds
    ##################################################

  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    # 设置拉取服务注册信息时间（单位：30秒）
    registry-fetch-interval-seconds: 5
    # 如果要迅速获取服务注册状态，可以缩小该值。比如：getaway网关接口启动需要马上调用
    
#token存储方式
#token的存储方式，可选值为：redis，jdbc，jwt_sy，jwt_asy；默认为jdbc
fyk.authorization.token-store: jwt_sy
